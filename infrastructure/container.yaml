Parameters: 
  BlueWeight:
    Default: 1
    Type: String
    Description: LB Weight for Blue Instance(s)

Resources:
  

# Target Group, Listener and Application  Load Balancer
  BlueTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      HealthCheckPath: '/BookManagement'
      Matcher:
        HttpCode: '200,302'
      Name: BlueTargetGroup
      Port: 8080
      Protocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      TargetType: ip
      UnhealthyThresholdCount: 3
      VpcId: !ImportValue user-management-vpc

  BlueTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ExecutionRoleArn: LabRole
      ContainerDefinitions:
        - Name: BookManagement
          Image: '381492124763.dkr.ecr.us-east-1.amazonaws.com/bookmanagement:latest'
          Essential: true
          PortMappings:
            - HostPort: 8080
              Protocol: tcp
              ContainerPort: 8080
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: '256'
      Memory: '512'
      Family: ecs-demo

  ECSDemoCluster:
    Type: 'AWS::ECS::Cluster'
    Properties: 
      ClusterName: BookManagementCluster
  ECSDemoService:
    Type: 'AWS::ECS::Service'
    DependsOn: ALBListener
    Properties:
      ServiceName: BookManagementService
      Cluster: !Ref ECSDemoCluster
      DesiredCount: 1
      TaskDefinition: !Ref BlueTaskDefinition
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: BookManagement
          ContainerPort: 8080
          TargetGroupArn: !Ref BlueTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !ImportValue user-management-security-WebServerSecurityGroupID
          Subnets:
            - !ImportValue user-management-vpc-PublicSubnet1
            - !ImportValue user-management-vpc-PublicSubnet2


  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref BlueTargetGroup
                Weight: !Ref BlueWeight
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets:
      - !ImportValue user-management-vpc-PublicSubnet1
      - !ImportValue user-management-vpc-PublicSubnet2
      SecurityGroups:
        - !ImportValue user-management-security-WebServerSecurityGroupID


Outputs:
  LoadBalancerURL:
    Description: "URL to access our Tomcat Server"
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - ApplicationLoadBalancer
          - DNSName
        - '/BookManagement'
    Export:
      Name: !Sub "${AWS::StackName}-TomcatURL"
